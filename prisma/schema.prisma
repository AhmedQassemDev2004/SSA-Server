generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())
  phone     String
  updatedAt DateTime @updatedAt
  role      String   @default("user")
  active    Boolean  @default(true)
}

model Services {
  id          Int            @id @default(autoincrement())
  name        String
  description String @db.Text
  images      Json   @db.Json
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  categoryId  Int?
  active      Boolean        @default(true)
  portfolios  Portfolio[]
  orders      ServiceOrder[]
  category    Category?      @relation(fields: [categoryId], references: [id])
}

model Category {
  id          Int        @id @default(autoincrement())
  name        String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  description String @db.Text
  active      Boolean    @default(true)
  services    Services[]
}

model Portfolio {
  id          Int      @id @default(autoincrement())
  title       String
  description String? @db.Text
  images      Json   @db.Json
  serviceId   Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  links       Json   @db.Json
  service     Services @relation(fields: [serviceId], references: [id], onDelete: Cascade)
}

model Contact {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  message   String @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  subject   String
}

model Testimonials {
  id              Int      @id @default(autoincrement())
  userName        String
  userDesignation String @db.Text
  content         String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model ServiceOrder {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  phone     String
  company   String
  message   String @db.Text
  serviceId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  service   Services @relation(fields: [serviceId], references: [id])
}
